/*! For license information please see components-Button-Button-stories.cfc15182.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkatomix=self.webpackChunkatomix||[]).push([[721],{"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"./src/components/Button/Button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllOutlineVariants:()=>AllOutlineVariants,AllSizes:()=>AllSizes,AllVariants:()=>AllVariants,Danger:()=>Danger,Disabled:()=>Disabled,IconButtonVariants:()=>IconButtonVariants,IconOnly:()=>IconOnly,Info:()=>Info,Large:()=>Large,LinkButton:()=>LinkButton,Medium:()=>Medium,OutlinePrimary:()=>OutlinePrimary,OutlineSecondary:()=>OutlineSecondary,Primary:()=>Primary,Rounded:()=>Rounded,RoundedVariants:()=>RoundedVariants,Secondary:()=>Secondary,Small:()=>Small,Success:()=>Success,Warning:()=>Warning,WithIcon:()=>WithIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Button_stories});__webpack_require__("./node_modules/react/index.js");var components=__webpack_require__("./src/lib/constants/components.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Button=({label,onClick,variant="primary",size="md",disabled=!1,icon,iconOnly=!1,rounded=!1,className=""})=>{const{generateButtonClass,handleClick}=function useButton(initialProps){const defaultProps={variant:"primary",size:"md",disabled:!1,rounded:!1,...initialProps};return{defaultProps,generateButtonClass:props=>{const{variant=defaultProps.variant,size=defaultProps.size,disabled=defaultProps.disabled,rounded=defaultProps.rounded,iconOnly=!1,className=""}=props;return`c-btn c-btn--${variant} ${"md"===size?"":`c-btn--${size}`} ${iconOnly?"c-btn--icon":""} ${rounded?"c-btn--rounded":""} ${disabled?"c-btn--disabled":""} ${className}`.trim()},handleClick:handler=>()=>{!defaultProps.disabled&&handler&&handler()}}}({variant,size,disabled,rounded}),buttonClass=generateButtonClass({variant,size,disabled,rounded,iconOnly,className});return(0,jsx_runtime.jsxs)("button",{className:buttonClass,onClick:handleClick(onClick),disabled,"aria-disabled":disabled,children:[icon&&(0,jsx_runtime.jsx)("span",{className:components.n5.ICON_CLASS,children:icon}),(!iconOnly||!icon)&&(0,jsx_runtime.jsx)("span",{children:label})]})};Button.__docgenInfo={description:"",methods:[],displayName:"Button",props:{className:{required:!1,tsType:{name:"string"},description:"Additional CSS class names",defaultValue:{value:"''",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:"Component disabled state",defaultValue:{value:"false",computed:!1}},label:{required:!0,tsType:{name:"string"},description:"Button contents"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Optional click handler"},variant:{required:!1,tsType:{name:"union",raw:"| ThemeColor \n| `outline-${ThemeColor}`\n| 'link'",elements:[{name:"union",raw:"| 'primary'\n| 'secondary'\n| 'success'\n| 'info'\n| 'warning'\n| 'danger'\n| 'light'\n| 'dark'",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'success'"},{name:"literal",value:"'info'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'danger'"},{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},{name:"literal",value:"`outline-${ThemeColor}`"},{name:"literal",value:"'link'"}]},description:"Button variant",defaultValue:{value:"'primary'",computed:!1}},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"Button size",defaultValue:{value:"'md'",computed:!1}},icon:{required:!1,tsType:{name:"ReactNode"},description:"Optional icon"},iconOnly:{required:!1,tsType:{name:"boolean"},description:"Icon only button",defaultValue:{value:"false",computed:!1}},rounded:{required:!1,tsType:{name:"boolean"},description:"Make button fully rounded (pill shape)",defaultValue:{value:"false",computed:!1}}}};const Button_stories={title:"Components/Button",component:Button,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{variant:{control:{type:"select"},options:["primary","secondary","success","info","warning","danger","light","dark","outline-primary","outline-secondary","outline-success","outline-info","outline-warning","outline-danger","outline-light","outline-dark","link"],description:"The visual style of the button"},size:{control:{type:"select"},options:["sm","md","lg"],description:"The size of the button"},disabled:{control:"boolean",description:"Whether the button is disabled"},icon:{control:"text",description:"Optional icon element to display in the button"},iconOnly:{control:"boolean",description:"Whether the button should only display an icon"},rounded:{control:"boolean",description:"Whether the button should have a fully rounded (pill) shape"}}},Icon=()=>(0,jsx_runtime.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",children:(0,jsx_runtime.jsx)("path",{d:"M12 5v14M5 12h14"})}),Primary={args:{label:"Primary Button",variant:"primary",size:"md"}},Secondary={args:{label:"Secondary Button",variant:"secondary",size:"md"}},Success={args:{label:"Success Button",variant:"success",size:"md"}},Info={args:{label:"Info Button",variant:"info",size:"md"}},Warning={args:{label:"Warning Button",variant:"warning",size:"md"}},Danger={args:{label:"Danger Button",variant:"danger",size:"md"}},OutlinePrimary={args:{label:"Outline Primary",variant:"outline-primary",size:"md"}},OutlineSecondary={args:{label:"Outline Secondary",variant:"outline-secondary",size:"md"}},LinkButton={args:{label:"Link Button",variant:"link",size:"md"}},Small={args:{label:"Small Button",variant:"primary",size:"sm"}},Medium={args:{label:"Medium Button",variant:"primary",size:"md"}},Large={args:{label:"Large Button",variant:"primary",size:"lg"}},Disabled={args:{label:"Disabled Button",variant:"primary",size:"md",disabled:!0}},WithIcon={args:{label:"Button with Icon",variant:"primary",size:"md",icon:(0,jsx_runtime.jsx)(Icon,{})}},IconOnly={args:{label:"Add",variant:"primary",size:"md",icon:(0,jsx_runtime.jsx)(Icon,{}),iconOnly:!0}},AllVariants={args:{label:"Button",variant:"success"},render:()=>(0,jsx_runtime.jsxs)("div",{className:"u-d-flex u-flex-wrap u-gap-2",children:[(0,jsx_runtime.jsx)(Button,{label:"Primary",variant:"primary"}),(0,jsx_runtime.jsx)(Button,{label:"Secondary",variant:"secondary"}),(0,jsx_runtime.jsx)(Button,{label:"Success",variant:"success"}),(0,jsx_runtime.jsx)(Button,{label:"Info",variant:"info"}),(0,jsx_runtime.jsx)(Button,{label:"Warning",variant:"warning"}),(0,jsx_runtime.jsx)(Button,{label:"Danger",variant:"danger"}),(0,jsx_runtime.jsx)(Button,{label:"Light",variant:"light"}),(0,jsx_runtime.jsx)(Button,{label:"Dark",variant:"dark"})]})},AllOutlineVariants={args:{label:"Button",variant:"outline-primary"},render:()=>(0,jsx_runtime.jsxs)("div",{className:"u-d-flex u-flex-wrap u-gap-2",children:[(0,jsx_runtime.jsx)(Button,{label:"Outline Primary",variant:"outline-primary"}),(0,jsx_runtime.jsx)(Button,{label:"Outline Secondary",variant:"outline-secondary"}),(0,jsx_runtime.jsx)(Button,{label:"Outline Success",variant:"outline-success"}),(0,jsx_runtime.jsx)(Button,{label:"Outline Info",variant:"outline-info"}),(0,jsx_runtime.jsx)(Button,{label:"Outline Warning",variant:"outline-warning"}),(0,jsx_runtime.jsx)(Button,{label:"Outline Danger",variant:"outline-danger"}),(0,jsx_runtime.jsx)(Button,{label:"Outline Light",variant:"outline-light"}),(0,jsx_runtime.jsx)(Button,{label:"Outline Dark",variant:"outline-dark"})]})},AllSizes={args:{label:"Button",variant:"primary"},render:()=>(0,jsx_runtime.jsxs)("div",{className:"u-d-flex u-align-items-center u-gap-2",children:[(0,jsx_runtime.jsx)(Button,{label:"Small",variant:"primary",size:"sm"}),(0,jsx_runtime.jsx)(Button,{label:"Medium",variant:"primary",size:"md"}),(0,jsx_runtime.jsx)(Button,{label:"Large",variant:"primary",size:"lg"})]})},IconButtonVariants={args:{label:"Button",variant:"primary",icon:(0,jsx_runtime.jsx)(Icon,{}),iconOnly:!0},render:()=>(0,jsx_runtime.jsxs)("div",{className:"u-d-flex u-flex-wrap u-gap-2",children:[(0,jsx_runtime.jsx)(Button,{label:"Add",variant:"primary",icon:(0,jsx_runtime.jsx)(Icon,{})}),(0,jsx_runtime.jsx)(Button,{label:"Add",variant:"secondary",icon:(0,jsx_runtime.jsx)(Icon,{})}),(0,jsx_runtime.jsx)(Button,{label:"Add",variant:"success",icon:(0,jsx_runtime.jsx)(Icon,{})}),(0,jsx_runtime.jsx)(Button,{label:"Add",variant:"primary",icon:(0,jsx_runtime.jsx)(Icon,{}),iconOnly:!0}),(0,jsx_runtime.jsx)(Button,{label:"Add",variant:"secondary",icon:(0,jsx_runtime.jsx)(Icon,{}),iconOnly:!0}),(0,jsx_runtime.jsx)(Button,{label:"Add",variant:"success",icon:(0,jsx_runtime.jsx)(Icon,{}),iconOnly:!0})]})},Rounded={args:{label:"Rounded Button",variant:"primary",size:"md",rounded:!0}},RoundedVariants={args:{label:"Button",variant:"primary",rounded:!0},render:()=>(0,jsx_runtime.jsxs)("div",{className:"u-d-flex u-flex-wrap u-gap-2",children:[(0,jsx_runtime.jsx)(Button,{label:"Primary",variant:"primary",rounded:!0}),(0,jsx_runtime.jsx)(Button,{label:"Secondary",variant:"secondary",rounded:!0}),(0,jsx_runtime.jsx)(Button,{label:"Success",variant:"success",rounded:!0}),(0,jsx_runtime.jsx)(Button,{label:"Info",variant:"info",rounded:!0}),(0,jsx_runtime.jsx)(Button,{label:"Warning",variant:"warning",rounded:!0}),(0,jsx_runtime.jsx)(Button,{label:"Danger",variant:"danger",rounded:!0}),(0,jsx_runtime.jsx)(Button,{label:"Light",variant:"light",rounded:!0}),(0,jsx_runtime.jsx)(Button,{label:"Dark",variant:"dark",rounded:!0})]})},__namedExportsOrder=["Primary","Secondary","Success","Info","Warning","Danger","OutlinePrimary","OutlineSecondary","LinkButton","Small","Medium","Large","Disabled","WithIcon","IconOnly","AllVariants","AllOutlineVariants","AllSizes","IconButtonVariants","Rounded","RoundedVariants"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Primary Button',\n    variant: 'primary',\n    size: 'md'\n  }\n}",...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Secondary Button',\n    variant: 'secondary',\n    size: 'md'\n  }\n}",...Secondary.parameters?.docs?.source}}},Success.parameters={...Success.parameters,docs:{...Success.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Success Button',\n    variant: 'success',\n    size: 'md'\n  }\n}",...Success.parameters?.docs?.source}}},Info.parameters={...Info.parameters,docs:{...Info.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Info Button',\n    variant: 'info',\n    size: 'md'\n  }\n}",...Info.parameters?.docs?.source}}},Warning.parameters={...Warning.parameters,docs:{...Warning.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Warning Button',\n    variant: 'warning',\n    size: 'md'\n  }\n}",...Warning.parameters?.docs?.source}}},Danger.parameters={...Danger.parameters,docs:{...Danger.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Danger Button',\n    variant: 'danger',\n    size: 'md'\n  }\n}",...Danger.parameters?.docs?.source}}},OutlinePrimary.parameters={...OutlinePrimary.parameters,docs:{...OutlinePrimary.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Outline Primary',\n    variant: 'outline-primary',\n    size: 'md'\n  }\n}",...OutlinePrimary.parameters?.docs?.source}}},OutlineSecondary.parameters={...OutlineSecondary.parameters,docs:{...OutlineSecondary.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Outline Secondary',\n    variant: 'outline-secondary',\n    size: 'md'\n  }\n}",...OutlineSecondary.parameters?.docs?.source}}},LinkButton.parameters={...LinkButton.parameters,docs:{...LinkButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Link Button',\n    variant: 'link',\n    size: 'md'\n  }\n}",...LinkButton.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Small Button',\n    variant: 'primary',\n    size: 'sm'\n  }\n}",...Small.parameters?.docs?.source}}},Medium.parameters={...Medium.parameters,docs:{...Medium.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Medium Button',\n    variant: 'primary',\n    size: 'md'\n  }\n}",...Medium.parameters?.docs?.source}}},Large.parameters={...Large.parameters,docs:{...Large.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Large Button',\n    variant: 'primary',\n    size: 'lg'\n  }\n}",...Large.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Disabled Button',\n    variant: 'primary',\n    size: 'md',\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Button with Icon',\n    variant: 'primary',\n    size: 'md',\n    icon: <Icon />\n  }\n}",...WithIcon.parameters?.docs?.source}}},IconOnly.parameters={...IconOnly.parameters,docs:{...IconOnly.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Add',\n    variant: 'primary',\n    size: 'md',\n    icon: <Icon />,\n    iconOnly: true\n  }\n}",...IconOnly.parameters?.docs?.source}}},AllVariants.parameters={...AllVariants.parameters,docs:{...AllVariants.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: \'Button\',\n    variant: "success"\n  },\n  render: () => <div className="u-d-flex u-flex-wrap u-gap-2">\n      <Button label="Primary" variant="primary" />\n      <Button label="Secondary" variant="secondary" />\n      <Button label="Success" variant="success" />\n      <Button label="Info" variant="info" />\n      <Button label="Warning" variant="warning" />\n      <Button label="Danger" variant="danger" />\n      <Button label="Light" variant="light" />\n      <Button label="Dark" variant="dark" />\n    </div>\n}',...AllVariants.parameters?.docs?.source}}},AllOutlineVariants.parameters={...AllOutlineVariants.parameters,docs:{...AllOutlineVariants.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: \'Button\',\n    variant: \'outline-primary\'\n  },\n  render: () => <div className="u-d-flex u-flex-wrap u-gap-2">\n      <Button label="Outline Primary" variant="outline-primary" />\n      <Button label="Outline Secondary" variant="outline-secondary" />\n      <Button label="Outline Success" variant="outline-success" />\n      <Button label="Outline Info" variant="outline-info" />\n      <Button label="Outline Warning" variant="outline-warning" />\n      <Button label="Outline Danger" variant="outline-danger" />\n      <Button label="Outline Light" variant="outline-light" />\n      <Button label="Outline Dark" variant="outline-dark" />\n    </div>\n}',...AllOutlineVariants.parameters?.docs?.source}}},AllSizes.parameters={...AllSizes.parameters,docs:{...AllSizes.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: \'Button\',\n    variant: \'primary\'\n  },\n  render: () => <div className="u-d-flex u-align-items-center u-gap-2">\n      <Button label="Small" variant="primary" size="sm" />\n      <Button label="Medium" variant="primary" size="md" />\n      <Button label="Large" variant="primary" size="lg" />\n    </div>\n}',...AllSizes.parameters?.docs?.source}}},IconButtonVariants.parameters={...IconButtonVariants.parameters,docs:{...IconButtonVariants.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: \'Button\',\n    variant: \'primary\',\n    icon: <Icon />,\n    iconOnly: true\n  },\n  render: () => <div className="u-d-flex u-flex-wrap u-gap-2">\n      <Button label="Add" variant="primary" icon={<Icon />} />\n      <Button label="Add" variant="secondary" icon={<Icon />} />\n      <Button label="Add" variant="success" icon={<Icon />} />\n      <Button label="Add" variant="primary" icon={<Icon />} iconOnly />\n      <Button label="Add" variant="secondary" icon={<Icon />} iconOnly />\n      <Button label="Add" variant="success" icon={<Icon />} iconOnly />\n    </div>\n}',...IconButtonVariants.parameters?.docs?.source}}},Rounded.parameters={...Rounded.parameters,docs:{...Rounded.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Rounded Button',\n    variant: 'primary',\n    size: 'md',\n    rounded: true\n  }\n}",...Rounded.parameters?.docs?.source}}},RoundedVariants.parameters={...RoundedVariants.parameters,docs:{...RoundedVariants.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: \'Button\',\n    variant: \'primary\',\n    rounded: true\n  },\n  render: () => <div className="u-d-flex u-flex-wrap u-gap-2">\n      <Button label="Primary" variant="primary" rounded />\n      <Button label="Secondary" variant="secondary" rounded />\n      <Button label="Success" variant="success" rounded />\n      <Button label="Info" variant="info" rounded />\n      <Button label="Warning" variant="warning" rounded />\n      <Button label="Danger" variant="danger" rounded />\n      <Button label="Light" variant="light" rounded />\n      <Button label="Dark" variant="dark" rounded />\n    </div>\n}',...RoundedVariants.parameters?.docs?.source}}}},"./src/lib/constants/components.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F0:()=>SIZES,lq:()=>ACCORDION,lt:()=>THEME_COLORS,n5:()=>BUTTON,yq:()=>BADGE});const THEME_COLORS=["primary","secondary","success","info","warning","danger","light","dark"],SIZES=["sm","md","lg"],BUTTON={BASE_CLASS:"c-btn",ICON_CLASS:"c-btn__icon",VARIANT_PREFIX:"c-btn--"},ACCORDION={SELECTORS:{ACCORDION:".c-accordion",HEADER:".c-accordion__header",PANEL:".c-accordion__panel",BODY:".c-accordion__body"},CLASSES:{IS_OPEN:"is-open",IS_ANIMATING:"is-animating",IS_DISABLED:"is-disabled"},ATTRIBUTES:{ARIA_EXPANDED:"aria-expanded",ARIA_CONTROLS:"aria-controls",ARIA_HIDDEN:"aria-hidden",ROLE:"role"},CSS_VARS:{PANEL_HEIGHT:"--panel-height"}},BADGE={BASE_CLASS:"c-badge",ICON_CLASS:"c-badge__icon",VARIANT_PREFIX:"c-badge--",SIZE_PREFIX:"c-badge--"}}}]);