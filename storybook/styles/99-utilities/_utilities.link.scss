@use 'sass:map';
@use "../01-settings/settings.maps" as color-maps;
@use "../01-settings/settings.config" as config;
@use "../01-settings/settings.colors" as colors;
@use "../02-tools/tools.to-rgb" as *;
@use "../02-tools/tools.color-functions" as *;

// Define utilities for links
$utilities-link: (
  "link-opacity": (
    css-var: true,
    class: u-link-opacity,
    state: hover,
    values: (
      10: .1,
      25: .25,
      50: .5,
      75: .75,
      100: 1
    )
  ),
  "link-offset": (
    property: text-underline-offset,
    class: u-link-offset,
    state: hover,
    values: (
      1: .125em,
      2: .25em,
      3: .375em,
    )
  ),
  "link-underline": (
    property: text-decoration-color,
    class: u-link-underline,
    local-vars: (
      "link-underline-opacity": 1
    ),
    values: map.merge(
      color-maps.$utilities-links-underline,
      (
        null: rgba(var(--#{config.$prefix}link-color-rgb), var(--#{config.$prefix}u-link-underline-opacity, 1)),
      )
    )
  ),
  "link-underline-opacity": (
    css-var: true,
    class: u-link-underline-opacity,
    state: hover,
    values: (
      0: 0,
      10: .1,
      25: .25,
      50: .5,
      75: .75,
      100: 1
    ),
  ),
);

// Define variables with default values
$enable-important-utilities: true !default;
$link-shade-percentage: 15% !default;

// All-caps `RGBA()` function used because of this Sass bug: https://github.com/sass/node-sass/issues/2251
@each $color, $value in color-maps.$theme-colors {
  .u-link-#{$color} {
    color: RGBA(var(--#{config.$prefix}#{$color}-rgb), var(--#{config.$prefix}u-link-opacity, 1)) if($enable-important-utilities, !important, null);
    text-decoration-color: RGBA(var(--#{config.$prefix}#{$color}-rgb), var(--#{config.$prefix}u-link-underline-opacity, 1)) if($enable-important-utilities, !important, null);

    @if $link-shade-percentage != 0 {
      &:hover,
      &:focus {
        $hover-color: if(colors.$color-contrast-dark == "white", shade-color($value, $link-shade-percentage), tint-color($value, $link-shade-percentage));
        color: RGBA(#{to-rgb($hover-color)}, var(--#{config.$prefix}u-link-opacity, 1)) if($enable-important-utilities, !important, null);
        text-decoration-color: RGBA(#{to-rgb($hover-color)}, var(--#{config.$prefix}u-link-underline-opacity, 1)) if($enable-important-utilities, !important, null);
      }
    }
  }
}
