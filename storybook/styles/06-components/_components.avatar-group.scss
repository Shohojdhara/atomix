@use '../01-settings/settings.config' as *;
@use '../01-settings/settings.avatar-group' as *;
@use '../02-tools/tools.rem' as *;
@use '../02-tools/tools.animations' as *;
@use '../01-settings/settings.typography' as *;

.c-avatar-group {
  --#{$prefix}avatar-group-gap: #{rem($avatar-group-gap)};
  --#{$prefix}avatar-group-more-color: #{$avatar-group-more-color};
  --#{$prefix}avatar-group-more-bg: #{$avatar-group-more-bg};
  --#{$prefix}avatar-group-more-font-size: #{$avatar-group-more-font-size};
  --#{$prefix}avatar-group-more-border-width: #{$avatar-group-more-border-width};
  --#{$prefix}avatar-group-more-border-color: #{$avatar-group-more-border-color};
  display: flex;
  gap: var(--#{$prefix}avatar-group-gap);

  &__more {
    display: grid;
    place-items: center;
    color: var(--#{$prefix}avatar-group-more-color);
    font-size: var(--#{$prefix}avatar-group-more-font-size);
    font-weight: $font-weight-medium;
    background-color: var(--#{$prefix}avatar-group-more-bg);
    border: var(--#{$prefix}avatar-group-more-border-width) solid
      var(--#{$prefix}avatar-group-more-border-color);
  }

  &--stacked {
    gap: 0;

    > * {
      @include basic-transition();
    }

    @for $i from 1 through 10 {
      > *:nth-child(#{$i + 1}) {
        transform: translateX(
          calc((var(--#{$prefix}avatar-size) / -2) * #{$i})
        );
      }
    }

    &:hover {
      gap: var(--#{$prefix}avatar-group-gap);

      & > * {
        transform: none;
      }
    }
  }
}
