@use '../01-settings/_settings.config' as *;
@use '../01-settings/_settings.dropdown' as *;
@use '../02-tools/_tools.rem' as *;
@use '../02-tools/_tools.animations' as *;
@use '../02-tools/_tools.spacing' as *;

// Add keyframe animations for dropdown
@keyframes #{$prefix}dropdown-fade-in {
  from {
    opacity: 0;
    transform: translateY(-15px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes #{$prefix}dropdown-fade-out {
  from {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
  to {
    opacity: 0;
    transform: translateY(-15px) scale(0.95);
  }
}

// Add keyframe for toggle icon rotation
@keyframes #{$prefix}dropdown-icon-rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(-180deg);
  }
}

.c-dropdown {
  $root: &;

  --#{$prefix}dropdown-min-width: #{rem($dropdown-min-width)};
  --#{$prefix}dropdown-padding-x: #{if($dropdown-padding-x == 0, 0, rem($dropdown-padding-x))};
  --#{$prefix}dropdown-padding-y: #{rem($dropdown-padding-y)};
  --#{$prefix}dropdown-spacer: #{rem($dropdown-spacer)};
  --#{$prefix}dropdown-font-size: #{$dropdown-font-size};
  --#{$prefix}dropdown-color: #{$dropdown-color};
  --#{$prefix}dropdown-bg: #{$dropdown-bg};
  --#{$prefix}dropdown-border-color: #{$dropdown-border-color};
  --#{$prefix}dropdown-border-radius: #{$dropdown-border-radius};
  --#{$prefix}dropdown-border-width: #{$dropdown-border-width};
  --#{$prefix}dropdown-box-shadow: #{$dropdown-box-shadow};
  --#{$prefix}dropdown-link-color: #{$dropdown-link-color};
  --#{$prefix}dropdown-link-hover-color: #{$dropdown-link-hover-color};
  --#{$prefix}dropdown-link-hover-bg: #{$dropdown-link-hover-bg};
  --#{$prefix}dropdown-link-border-radius: #{$dropdown-link-border-radius};
  --#{$prefix}dropdown-active-color: #{$dropdown-link-active-color};
  --#{$prefix}dropdown-active-bg: #{$dropdown-link-active-bg};
  --#{$prefix}dropdown-item-padding-x: #{rem($dropdown-item-padding-x)};
  --#{$prefix}dropdown-item-padding-y: #{rem($dropdown-item-padding-y)};
  // Use animation variables from settings
  --#{$prefix}dropdown-animation-duration: #{$dropdown-animation-duration};
  --#{$prefix}dropdown-animation-timing: #{$dropdown-animation-timing};

  display: inline-block;
  position: relative;

  &__toggle {
    width: 100%;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  &__toggle-icon {
    transition: transform var(--#{$prefix}dropdown-animation-duration)
      var(--#{$prefix}dropdown-animation-timing);
    margin-left: 0.25rem;
  }

  &__menu-wrapper {
    position: absolute;
    left: 0;
    z-index: 99;
    display: flex;
    opacity: 0;
    visibility: hidden;
    transform-origin: top center;
    // Improved transitions - shorter and with better easing
    transition:
      opacity var(--#{$prefix}dropdown-animation-duration)
        var(--#{$prefix}dropdown-animation-timing),
      visibility var(--#{$prefix}dropdown-animation-duration)
        var(--#{$prefix}dropdown-animation-timing),
      transform var(--#{$prefix}dropdown-animation-duration)
        var(--#{$prefix}dropdown-animation-timing);
    transform: translateY(-15px) scale(0.95);
    pointer-events: none;
    will-change: transform, opacity, visibility;

    &.is-open {
      opacity: 1;
      transform: translateY(0) scale(1);
      visibility: visible;
      animation: #{$prefix}dropdown-fade-in var(--#{$prefix}dropdown-animation-duration)
        var(--#{$prefix}dropdown-animation-timing) forwards;
      pointer-events: auto;
    }

    &:not(.is-open) {
      animation: #{$prefix}dropdown-fade-out var(--#{$prefix}dropdown-animation-duration)
        var(--#{$prefix}dropdown-animation-timing) forwards;
    }

    // Placement variations - using a mixin to reduce duplication
    @mixin dropdown-placement($position, $alignment, $property, $value) {
      &--#{$position}-#{$alignment} {
        @if $position == 'bottom' {
          top: 100%;
          margin-top: var(--#{$prefix}dropdown-spacer);
          transform-origin: top center;
        } @else if $position == 'top' {
          bottom: 100%;
          margin-bottom: var(--#{$prefix}dropdown-spacer);
          transform-origin: bottom center;
        } @else if $position == 'left' {
          right: 100%;
          margin-right: var(--#{$prefix}dropdown-spacer);
          transform-origin: right center;
        } @else if $position == 'right' {
          left: 100%;
          margin-left: var(--#{$prefix}dropdown-spacer);
          transform-origin: left center;
        }

        @if $alignment == 'start' {
          @if $position == 'top' or $position == 'bottom' {
            left: 0;
          } @else {
            top: 0;
          }
        } @else if $alignment == 'end' {
          @if $position == 'top' or $position == 'bottom' {
            right: 0;
            left: auto;
          } @else {
            bottom: 0;
          }
        }
      }
    }

    // Apply the mixin for all placement variations
    @include dropdown-placement('bottom', 'start', 'top', '100%');
    @include dropdown-placement('bottom', 'end', 'top', '100%');
    @include dropdown-placement('top', 'start', 'bottom', '100%');
    @include dropdown-placement('top', 'end', 'bottom', '100%');
    @include dropdown-placement('left', 'start', 'right', '100%');
    @include dropdown-placement('left', 'end', 'right', '100%');
    @include dropdown-placement('right', 'start', 'left', '100%');
    @include dropdown-placement('right', 'end', 'left', '100%');
  }

  &__menu-inner {
    width: 100%;
    min-width: var(--#{$prefix}dropdown-min-width);
    border-radius: var(--#{$prefix}dropdown-border-radius);
    box-shadow: var(--#{$prefix}dropdown-box-shadow);
    overflow: hidden;
  }

  &__menu {
    width: 100%;
    padding: var(--#{$prefix}dropdown-padding-y) var(--#{$prefix}dropdown-padding-x);
    list-style: none;
    @include mb(0);
    background-color: var(--#{$prefix}dropdown-bg);
    border-radius: var(--#{$prefix}dropdown-border-radius);
    box-shadow: var(--#{$prefix}dropdown-box-shadow);
    overflow: hidden;
  }

  &__menu-item {
    display: block;
    width: 100%;
    padding: var(--#{$prefix}dropdown-item-padding-y) var(--#{$prefix}dropdown-item-padding-x);
    border: 0;
    border-radius: var(--#{$prefix}dropdown-link-border-radius);
    background: transparent;
    color: var(--#{$prefix}dropdown-link-color);
    font-size: var(--#{$prefix}dropdown-font-size);
    text-align: left;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.2s ease;

    &:hover,
    &:focus {
      color: var(--#{$prefix}dropdown-link-hover-color);
      background-color: var(--#{$prefix}dropdown-link-hover-bg);
      outline: none;
      padding-left: calc(var(--#{$prefix}dropdown-item-padding-x) + 3px);
    }

    &.is-active {
      color: var(--#{$prefix}dropdown-active-color);
      background-color: var(--#{$prefix}dropdown-active-bg);
    }

    &.is-disabled {
      color: var(--#{$prefix}dropdown-color);
      opacity: 0.5;
      pointer-events: none;
    }
  }

  &__menu-item-icon {
    display: inline-flex;
    align-items: center;
    margin-right: 0.5rem;
  }

  &__divider {
    height: 1px;
    margin: 0.5rem 0;
    background-color: var(--#{$prefix}dropdown-border-color);
  }

  &__header {
    display: block;
    padding: var(--#{$prefix}dropdown-item-padding-y) var(--#{$prefix}dropdown-item-padding-x);
    margin-bottom: 0;
    font-size: 0.875em;
    color: var(--#{$prefix}dropdown-color);
    white-space: nowrap;
    opacity: 0.8;
  }

  // Color variants
  @each $color in (brand, secondary, tertiary, success, info, warning, error, light, dark) {
    &--#{$color} {
      --#{$prefix}dropdown-link-color: var(--#{$prefix}#{$color}-text-emphasis);
      --#{$prefix}dropdown-link-hover-color: var(--#{$prefix}#{$color}-text-emphasis);
      --#{$prefix}dropdown-link-hover-bg: var(--#{$prefix}#{$color}-bg-subtle);
    }
  }

  &.is-open {
    #{$root}__toggle-icon {
      transform: rotate(-180deg);
    }
  }
}
