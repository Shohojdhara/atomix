@use '../01-settings/settings.config' as config;
@use '../01-settings/settings.grid' as grid;
@use '../01-settings/settings.breakpoints' as breakpoints;
@use './tools.breakpoints' as *;
@use 'sass:math';
@use 'sass:map';
@use 'sass:list';

// Container mixin
@mixin make-container($gutter: grid.$grid-gutter-width) {
  width: 100%;
  padding-right: $gutter * 0.5;
  padding-left: $gutter * 0.5;
  margin-right: auto;
  margin-left: auto;
}

// Row mixin
@mixin make-row($gutter: grid.$grid-gutter-width) {
  display: flex;
  flex-wrap: wrap;
  margin-right: -$gutter * 0.5;
  margin-left: -$gutter * 0.5;
}

// Column ready mixin
@mixin make-col-ready($gutter: grid.$grid-gutter-width) {
  position: relative;
  width: 100%;
  padding-right: $gutter * 0.5;
  padding-left: $gutter * 0.5;
}

// Column size mixin
@mixin make-col($size, $columns: grid.$grid-columns) {
  flex: 0 0 auto;
  width: math.percentage(math.div($size, $columns));
}

// Column offset mixin
@mixin make-col-offset($size, $columns: grid.$grid-columns) {
  margin-left: if($size > 0, math.percentage(math.div($size, $columns)), 0);
}

// Grid columns generator
@mixin grid-columns(
  $columns: grid.$grid-columns,
  $gutter: grid.$grid-gutter-width,
  $breakpoints: breakpoints.$grid-breakpoints
) {
  @each $breakpoint in map.keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      .o-grid__col-#{$infix}-auto {
        flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
      }

      @if $columns > 0 {
        @for $i from 1 through $columns {
          .o-grid__col-#{$infix}-#{$i} {
            @include make-col($i, $columns);
          }
        }

        @for $i from 0 through ($columns - 1) {
          @if not($infix == '' and $i == 0) {
            .o-grid__offset-#{$infix}-#{$i} {
              @include make-col-offset($i, $columns);
            }
          }
        }
      }
    }
  }
}
