{"version":3,"file":"js/docs.js","mappings":"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","sources":["webpack://atomix/./src/lib/constants/components.ts","webpack://atomix/./src/components/Accordion/Accordion.tsx","webpack://atomix/./src/lib/composables/useAccordion.ts","webpack://atomix/./src/lib/composables/useButton.ts","webpack://atomix/./src/components/Button/Button.tsx","webpack://atomix/./src/docs/components/ComponentShowcase.tsx","webpack://atomix/./src/docs/App.tsx","webpack://atomix/./src/lib/utils/dom.ts","webpack://atomix/./src/components/Button/scripts/buttonInteractions.ts","webpack://atomix/./src/components/Accordion/scripts/constants.ts","webpack://atomix/./src/components/Accordion/scripts/accordionInteractions.ts","webpack://atomix/./src/components/Accordion/scripts/index.ts","webpack://atomix/./src/main.ts","webpack://atomix/./src/main.tsx"],"sourcesContent":["import { ThemeColor, Size } from '../types/components';\n\n/**\n * Default theme colors for components\n */\nexport const THEME_COLORS: ThemeColor[] = [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n  'light',\n  'dark'\n];\n\n/**\n * Default sizes for components\n */\nexport const SIZES: Size[] = ['sm', 'md', 'lg'];\n\n/**\n * CSS class prefixes\n */\nexport const CLASS_PREFIX = {\n  COMPONENT: 'c-',\n  UTILITY: 'u-',\n  LAYOUT: 'l-',\n  OBJECT: 'o-',\n};\n\n/**\n * Button-specific constants\n */\nexport const BUTTON = {\n  BASE_CLASS: 'c-btn',\n  ICON_CLASS: 'c-btn__icon',\n  VARIANT_PREFIX: 'c-btn--',\n};\n\n/**\n * Accordion-specific constants\n */\nexport const ACCORDION = {\n  SELECTORS: {\n    ACCORDION: '.c-accordion',\n    HEADER: '.c-accordion__header',\n    PANEL: '.c-accordion__panel',\n    BODY: '.c-accordion__body'\n  },\n  CLASSES: {\n    IS_OPEN: 'is-open',\n    IS_ANIMATING: 'is-animating',\n    IS_DISABLED: 'is-disabled'\n  },\n  ATTRIBUTES: {\n    ARIA_EXPANDED: 'aria-expanded',\n    ARIA_CONTROLS: 'aria-controls',\n    ARIA_HIDDEN: 'aria-hidden',\n    ROLE: 'role'\n  },\n  CSS_VARS: {\n    PANEL_HEIGHT: '--panel-height'\n  }\n};\n\n/**\n * Badge-specific constants\n */\nexport const BADGE = {\n  BASE_CLASS: 'c-badge',\n  ICON_CLASS: 'c-badge__icon',\n  VARIANT_PREFIX: 'c-badge--',\n  SIZE_PREFIX: 'c-badge--'\n}; ","import React, { ReactNode, useEffect } from 'react';\nimport { ACCORDION } from '../../lib/constants/components';\nimport { useAccordion } from '../../lib/composables/useAccordion';\nimport { AccordionProps as AccordionPropsType } from '../../lib/types/components';\n\nexport type AccordionProps = AccordionPropsType;\n\nexport const Accordion: React.FC<AccordionProps> = ({\n  title,\n  children,\n  defaultOpen = false,\n  disabled = false,\n  iconPosition = 'right',\n  icon,\n  className = '',\n}) => {\n  const {\n    state,\n    toggle,\n    updatePanelHeight,\n    panelRef,\n    contentRef,\n    generateClassNames,\n    generateHeaderClassNames\n  } = useAccordion({ defaultOpen, disabled, iconPosition });\n\n  // Handle window resize to adjust panel height\n  useEffect(() => {\n    const handleResize = () => {\n      if (state.isOpen) {\n        updatePanelHeight();\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [state.isOpen, updatePanelHeight]);\n\n  const defaultIcon = (\n    <i className=\"c-accordion__icon\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <polyline points=\"6 9 12 15 18 9\"></polyline>\n      </svg>\n    </i>\n  );\n\n  return (\n    <div className={generateClassNames(className)}>\n      <button\n        className={generateHeaderClassNames()}\n        onClick={toggle}\n        aria-expanded={state.isOpen}\n        disabled={disabled}\n      >\n        <span className=\"c-accordion__title\">{title}</span>\n        {icon || defaultIcon}\n      </button>\n      <div className={ACCORDION.SELECTORS.PANEL.replace('.', '')} ref={panelRef}>\n        <div className={ACCORDION.SELECTORS.BODY.replace('.', '')} ref={contentRef}>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}; ","import { AccordionProps, AccordionState, IconPosition, ElementRefs } from '../types/components';\nimport { useState, useEffect, useRef } from 'react';\nimport { ACCORDION } from '../constants/components';\n\n/**\n * Accordion functionality hook result\n */\ninterface UseAccordionResult {\n  /** Current accordion state */\n  state: AccordionState;\n  /** Toggle the accordion open/closed */\n  toggle: () => void;\n  /** Update the panel height based on content */\n  updatePanelHeight: () => void;\n  /** Reference to the panel element */\n  panelRef: React.RefObject<HTMLDivElement>;\n  /** Reference to the content element */\n  contentRef: React.RefObject<HTMLDivElement>;\n  /** Generate accordion class names based on state */\n  generateClassNames: (baseClassName?: string) => string;\n  /** Generate header class names */\n  generateHeaderClassNames: () => string;\n}\n\n/**\n * Accordion functionality hook\n * @param initialProps - Initial accordion properties\n * @returns Accordion state and methods\n */\nexport function useAccordion(initialProps?: Partial<AccordionProps>): UseAccordionResult {\n  // Default accordion properties\n  const defaultProps: Partial<AccordionProps> = {\n    defaultOpen: false,\n    disabled: false,\n    iconPosition: 'right' as IconPosition,\n    ...initialProps\n  };\n\n  const [state, setState] = useState<AccordionState>({\n    isOpen: defaultProps.defaultOpen || false,\n    panelHeight: defaultProps.defaultOpen ? 'auto' : '0px'\n  });\n\n  const panelRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  /**\n   * Toggle accordion open/closed state\n   */\n  const toggle = (): void => {\n    if (!defaultProps.disabled) {\n      setState(prevState => ({\n        ...prevState,\n        isOpen: !prevState.isOpen\n      }));\n    }\n  };\n\n  /**\n   * Update panel height based on content\n   */\n  const updatePanelHeight = (): void => {\n    if (contentRef.current && panelRef.current) {\n      const height = state.isOpen ? `${contentRef.current.clientHeight}px` : '0px';\n      panelRef.current.style.setProperty(ACCORDION.CSS_VARS.PANEL_HEIGHT, height);\n      setState(prevState => ({\n        ...prevState,\n        panelHeight: height\n      }));\n    }\n  };\n\n  /**\n   * Effect to update panel height when open state changes\n   */\n  useEffect(() => {\n    updatePanelHeight();\n  }, [state.isOpen]);\n\n  /**\n   * Effect to handle window resize and update panel height\n   */\n  useEffect(() => {\n    const handleResize = (): void => {\n      if (state.isOpen) {\n        updatePanelHeight();\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [state.isOpen]);\n\n  /**\n   * Generate accordion class names based on state\n   */\n  const generateClassNames = (baseClassName: string = ''): string => {\n    const openClass = state.isOpen ? ACCORDION.CLASSES.IS_OPEN : '';\n    const disabledClass = defaultProps.disabled ? ACCORDION.CLASSES.IS_DISABLED : '';\n    return `c-accordion ${openClass} ${disabledClass} ${baseClassName}`.trim();\n  };\n\n  /**\n   * Generate header class names\n   */\n  const generateHeaderClassNames = (): string => {\n    const iconPositionClass = defaultProps.iconPosition === 'left' ? 'c-accordion__header--icon-left' : '';\n    return `c-accordion__header ${iconPositionClass}`.trim();\n  };\n\n  return {\n    state,\n    toggle,\n    updatePanelHeight,\n    panelRef,\n    contentRef,\n    generateClassNames,\n    generateHeaderClassNames\n  };\n} ","import { ButtonProps } from '../types/components';\n\n/**\n * Button state and functionality\n * @param initialProps - Initial button properties\n * @returns Button state and methods\n */\nexport function useButton(initialProps?: Partial<ButtonProps>) {\n  // Default button properties\n  const defaultProps: Partial<ButtonProps> = {\n    variant: 'primary',\n    size: 'md',\n    disabled: false,\n    rounded: false,\n    ...initialProps\n  };\n\n  /**\n   * Generate button class based on properties\n   * @param props - Button properties\n   * @returns Class string\n   */\n  const generateButtonClass = (props: Partial<ButtonProps>): string => {\n    const {\n      variant = defaultProps.variant,\n      size = defaultProps.size,\n      disabled = defaultProps.disabled,\n      rounded = defaultProps.rounded,\n      iconOnly = false,\n      className = '',\n    } = props;\n\n    const sizeClass = size === 'md' ? '' : `c-btn--${size}`;\n    const iconOnlyClass = iconOnly ? 'c-btn--icon' : '';\n    const roundedClass = rounded ? 'c-btn--rounded' : '';\n    const disabledClass = disabled ? 'c-btn--disabled' : '';\n    \n    return `c-btn c-btn--${variant} ${sizeClass} ${iconOnlyClass} ${roundedClass} ${disabledClass} ${className}`.trim();\n  };\n\n  /**\n   * Handle button click with disabled check\n   * @param handler - Click handler function\n   * @returns Function that respects disabled state\n   */\n  const handleClick = (handler?: () => void) => {\n    return () => {\n      if (!defaultProps.disabled && handler) {\n        handler();\n      }\n    };\n  };\n\n  return {\n    defaultProps,\n    generateButtonClass,\n    handleClick,\n  };\n} ","import React from 'react';\nimport { ButtonProps } from '../../lib/types/components';\nimport { useButton } from '../../lib/composables/useButton';\nimport { BUTTON } from '../../lib/constants/components';\n\nexport const Button: React.FC<ButtonProps> = ({\n  label,\n  onClick,\n  variant = 'primary',\n  size = 'md',\n  disabled = false,\n  icon,\n  iconOnly = false,\n  rounded = false,\n  className = '',\n}) => {\n  const { generateButtonClass, handleClick } = useButton({ \n    variant, size, disabled, rounded \n  });\n  \n  const buttonClass = generateButtonClass({ \n    variant, size, disabled, rounded, iconOnly, className \n  });\n  \n  return (\n    <button\n      className={buttonClass}\n      onClick={handleClick(onClick)}\n      disabled={disabled}\n      aria-disabled={disabled}\n    >\n      {icon && <span className={BUTTON.ICON_CLASS}>{icon}</span>}\n      {(!iconOnly || !icon) && <span>{label}</span>}\n    </button>\n  );\n};\n","import React from 'react';\nimport { Accordion } from '../../components/Accordion/Accordion';\nimport { Button } from '../../components/Button/Button';\n\ninterface ComponentShowcaseProps {\n  component: 'Accordion' | 'Button';\n  description: string;\n}\n\nexport const ComponentShowcase: React.FC<ComponentShowcaseProps> = ({ \n  component, \n  description \n}) => {\n  const renderComponent = () => {\n    switch (component) {\n      case 'Accordion':\n        return (\n          <div className=\"u-d-flex u-flex-column u-gap-4\">\n            <Accordion title=\"Default Accordion\" defaultOpen={true}>\n              <p>This is the content of the accordion. It can contain any JSX content.</p>\n            </Accordion>\n            \n            <Accordion title=\"Closed by Default\">\n              <p>This accordion starts closed and opens when clicked.</p>\n            </Accordion>\n            \n            <Accordion title=\"Disabled Accordion\" disabled={true}>\n              <p>This accordion is disabled and cannot be interacted with.</p>\n            </Accordion>\n          </div>\n        );\n      \n      case 'Button':\n        return (\n          <div className=\"u-d-flex u-flex-column u-gap-4\">\n            <div className=\"u-d-flex u-flex-wrap u-gap-3 u-align-items-center\">\n              <Button label=\"Primary Button\" variant=\"primary\" />\n              <Button label=\"Secondary Button\" variant=\"secondary\" />\n              <Button label=\"Success Button\" variant=\"success\" />\n            </div>\n            \n            <div className=\"u-d-flex u-flex-wrap u-gap-3 u-align-items-center\">\n              <Button label=\"Outline Button\" variant=\"outline-primary\" />\n              <Button label=\"Disabled Button\" disabled />\n              <Button label=\"Small Button\" size=\"sm\" />\n            </div>\n          </div>\n        );\n      \n      default:\n        return <p>Component not found</p>;\n    }\n  };\n\n  return (\n    <div className=\"c-card\">\n      <div className=\"c-card__body\">\n        <p className=\"c-card__text u-mb-4\">{description}</p>\n        \n        <div className=\"u-bg-white u-p-4 u-border u-border-radius\">\n          {renderComponent()}\n        </div>\n      </div>\n    </div>\n  );\n}; ","import React from 'react';\nimport { ComponentShowcase } from './components/ComponentShowcase';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"u-bg-light u-min-h-100vh u-d-flex u-flex-column\">\n      <header className=\"u-bg-dark u-py-5\">\n        <div className=\"o-container\">\n          <h1 className=\"u-text-light u-mb-2 u-fs-1 u-fw-bold\">Atomix Design System</h1>\n          <p className=\"u-text-light-75 u-fs-4\">A modern React component library for beautiful interfaces</p>\n        </div>\n      </header>\n      \n      <main className=\"u-flex-grow-1 u-py-5\">\n        <div className=\"o-container\">\n          <h2 className=\"u-mb-4 u-fs-2 u-fw-bold\">Components</h2>\n          \n          <section className=\"u-mb-5 u-pb-5 u-border-bottom\">\n            <h3 className=\"u-mb-4 u-fs-3 u-fw-semibold u-text-dark\">Accordion</h3>\n            <ComponentShowcase\n              component=\"Accordion\"\n              description=\"Expandable content sections for organizing information in a collapsible format.\"\n            />\n          </section>\n          \n          <section className=\"u-mb-5\">\n            <h3 className=\"u-mb-4 u-fs-3 u-fw-semibold u-text-dark\">Button</h3>\n            <ComponentShowcase\n              component=\"Button\"\n              description=\"Interactive elements that users can click to perform actions.\"\n            />\n          </section>\n        </div>\n      </main>\n      \n      <footer className=\"u-bg-dark u-py-3 u-mt-auto\">\n        <div className=\"o-container\">\n          <p className=\"u-text-light u-mb-0\">&copy; {new Date().getFullYear()} Atomix Design System</p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default App; ","/**\n * Check if element has a specific class\n * @param element - DOM element to check\n * @param className - Class name to check for\n * @returns Whether element has the class\n */\nexport function hasClass(element: HTMLElement, className: string): boolean {\n  return element.classList.contains(className);\n}\n\n/**\n * Add class to element if not already present\n * @param element - DOM element to modify\n * @param className - Class name to add\n */\nexport function addClass(element: HTMLElement, className: string): void {\n  if (!hasClass(element, className)) {\n    element.classList.add(className);\n  }\n}\n\n/**\n * Remove class from element if present\n * @param element - DOM element to modify\n * @param className - Class name to remove\n */\nexport function removeClass(element: HTMLElement, className: string): void {\n  if (hasClass(element, className)) {\n    element.classList.remove(className);\n  }\n}\n\n/**\n * Toggle class on element\n * @param element - DOM element to modify\n * @param className - Class name to toggle\n * @param force - If true, adds class; if false, removes class\n */\nexport function toggleClass(\n  element: HTMLElement, \n  className: string, \n  force?: boolean\n): void {\n  element.classList.toggle(className, force);\n} ","import { useButton } from '../../../lib/composables/useButton';\nimport { addClass, removeClass } from '../../../lib/utils/dom';\n\n/**\n * Apply hover effect to button\n * @param button - Button element\n */\nexport function applyHoverEffect(button: HTMLButtonElement): void {\n  const hoverClass = 'is-hovered';\n  \n  button.addEventListener('mouseenter', () => {\n    if (!button.disabled) {\n      addClass(button, hoverClass);\n    }\n  });\n  \n  button.addEventListener('mouseleave', () => {\n    removeClass(button, hoverClass);\n  });\n}\n\n/**\n * Apply active/pressed effect to button\n * @param button - Button element\n */\nexport function applyActiveEffect(button: HTMLButtonElement): void {\n  const activeClass = 'is-active';\n  \n  button.addEventListener('mousedown', () => {\n    if (!button.disabled) {\n      addClass(button, activeClass);\n    }\n  });\n  \n  button.addEventListener('mouseup', () => {\n    removeClass(button, activeClass);\n  });\n  \n  button.addEventListener('mouseleave', () => {\n    removeClass(button, activeClass);\n  });\n}\n\n/**\n * Initialize button functionality\n * @param button - Button element\n * @param options - Button options\n */\nexport function initializeButton(\n  button: HTMLButtonElement,\n  options?: {\n    onClick?: () => void;\n    enableHoverEffect?: boolean;\n    enableActiveEffect?: boolean;\n  }\n): void {\n  const { onClick, enableHoverEffect = true, enableActiveEffect = true } = options || {};\n  const { handleClick } = useButton();\n  \n  // Set up click handler with disabled state check\n  if (onClick) {\n    button.addEventListener('click', handleClick(onClick));\n  }\n  \n  // Apply interaction effects\n  if (enableHoverEffect) {\n    applyHoverEffect(button);\n  }\n  \n  if (enableActiveEffect) {\n    applyActiveEffect(button);\n  }\n} ","/**\n * @deprecated Import from lib/constants instead\n * This file is kept for backward compatibility and will be removed in future versions\n */\n\nimport { ACCORDION } from '../../../lib/constants/components';\n\nexport const SELECTORS = ACCORDION.SELECTORS;\nexport const CLASSES = ACCORDION.CLASSES;\nexport const ATTRIBUTES = ACCORDION.ATTRIBUTES;\nexport const CSS_VARS = ACCORDION.CSS_VARS; ","import Accordion, { initializeAccordions } from './index';\nimport { ACCORDION } from '../../../lib/constants/components';\nimport { addClass, removeClass } from '../../../lib/utils/dom';\n\n/**\n * Apply custom enter animation to accordion\n * @param accordion - Accordion element\n */\nexport function applyEnterAnimation(accordion: HTMLElement): void {\n  const header = accordion.querySelector(ACCORDION.SELECTORS.HEADER) as HTMLElement;\n  \n  if (!header) return;\n  \n  header.addEventListener('click', () => {\n    const isOpen = accordion.classList.contains(ACCORDION.CLASSES.IS_OPEN);\n    \n    if (isOpen) {\n      addClass(accordion, ACCORDION.CLASSES.IS_ANIMATING);\n      setTimeout(() => {\n        removeClass(accordion, ACCORDION.CLASSES.IS_ANIMATING);\n      }, 300); // Match your CSS transition duration\n    }\n  });\n}\n\n/**\n * Initialize accordions with custom behavior\n * @returns Array of accordion instances\n */\nexport function initializeAccordionsWithCustomBehavior(): Accordion[] {\n  const instances = initializeAccordions() as Accordion[];\n  \n  // Get all accordion elements\n  const accordions = document.querySelectorAll<HTMLElement>(ACCORDION.SELECTORS.ACCORDION);\n  \n  // Apply custom animations to each accordion\n  accordions.forEach(accordion => {\n    applyEnterAnimation(accordion);\n  });\n  \n  return instances;\n}\n\n/**\n * Opens all accordions on the page\n */\nexport function openAllAccordions(): void {\n  const accordions = document.querySelectorAll<HTMLElement>(ACCORDION.SELECTORS.ACCORDION);\n  \n  accordions.forEach(accordion => {\n    const header = accordion.querySelector(ACCORDION.SELECTORS.HEADER) as HTMLButtonElement;\n    if (header && !accordion.classList.contains(ACCORDION.CLASSES.IS_OPEN)) {\n      header.click();\n    }\n  });\n}\n\n/**\n * Closes all accordions on the page\n */\nexport function closeAllAccordions(): void {\n  const accordions = document.querySelectorAll<HTMLElement>(ACCORDION.SELECTORS.ACCORDION);\n  \n  accordions.forEach(accordion => {\n    const header = accordion.querySelector(ACCORDION.SELECTORS.HEADER) as HTMLButtonElement;\n    if (header && accordion.classList.contains(ACCORDION.CLASSES.IS_OPEN)) {\n      header.click();\n    }\n  });\n} ","import { ACCORDION } from '../../../lib/constants/components';\n// For backward compatibility, using local constants\nimport { SELECTORS, CLASSES, ATTRIBUTES, CSS_VARS } from './constants';\n\n/**\n * Interface for Accordion instance\n */\ninterface AccordionInstance {\n  destroy: () => void;\n}\n\n/**\n * Class representing an Accordion component\n */\nclass Accordion implements AccordionInstance {\n  private $accordion: HTMLElement;\n  private $toggler: HTMLButtonElement | null = null;\n  private $panel: HTMLElement | null = null;\n  private $body: HTMLElement | null = null;\n  private _resizeObserver: ResizeObserver | null = null;\n\n  /**\n   * Creates an instance of Accordion\n   * @param element - The accordion container element\n   */\n  constructor(element: HTMLElement) {\n    this.$accordion = element;\n    this._initialize();\n  }\n\n  /**\n   * Initialize the accordion component\n   */\n  private _initialize(): void {\n    this._initializeElements();\n    if (!this._validateElements()) return;\n    this._setupAccessibility();\n    this._bindEvents();\n    this._initializeState();\n    this._observeResizing();\n  }\n\n  /**\n   * Initialize DOM elements\n   */\n  private _initializeElements(): void {\n    let $toggler = this.$accordion.querySelector(ACCORDION.SELECTORS.HEADER) as HTMLElement | null;\n    this.$panel = this.$accordion.querySelector(ACCORDION.SELECTORS.PANEL);\n    this.$body = this.$accordion.querySelector(ACCORDION.SELECTORS.BODY);\n\n    if ($toggler && $toggler.tagName !== 'BUTTON') {\n      const $button = document.createElement('button');\n      $button.className = $toggler.className;\n      $button.innerHTML = $toggler.innerHTML;\n      $toggler.parentNode?.replaceChild($button, $toggler);\n      $toggler = $button;\n    }\n\n    this.$toggler = $toggler as HTMLButtonElement;\n  }\n\n  /**\n   * Validate required elements exist\n   * @returns Whether all required elements exist\n   */\n  private _validateElements(): boolean {\n    if (!this.$toggler || !this.$panel || !this.$body) {\n      console.warn('Accordion: Missing required elements', this.$accordion);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Set up accessibility attributes\n   */\n  private _setupAccessibility(): void {\n    const panelId = `accordion-${Math.random().toString(36).slice(2, 11)}`;\n\n    this.$toggler?.setAttribute(ACCORDION.ATTRIBUTES.ARIA_EXPANDED, 'false');\n    this.$toggler?.setAttribute(ACCORDION.ATTRIBUTES.ARIA_CONTROLS, panelId);\n\n    this.$panel?.setAttribute(ACCORDION.ATTRIBUTES.ROLE, 'region');\n    if (this.$panel) this.$panel.id = panelId;\n    this.$panel?.setAttribute(ACCORDION.ATTRIBUTES.ARIA_HIDDEN, 'true');\n  }\n\n  /**\n   * Bind event listeners\n   */\n  private _bindEvents(): void {\n    this.$toggler?.addEventListener('click', this._handleToggle.bind(this));\n    this.$toggler?.addEventListener('keydown', this._handleKeydown.bind(this));\n  }\n\n  /**\n   * Initialize initial state\n   */\n  private _initializeState(): void {\n    if (this.$accordion.classList.contains(ACCORDION.CLASSES.IS_OPEN)) {\n      this._setExpandedState(true);\n      this._updatePanelHeight();\n    }\n  }\n\n  /**\n   * Observe resizing of accordion content\n   */\n  private _observeResizing(): void {\n    if (!this.$body) return;\n    \n    this._resizeObserver = new ResizeObserver(() => {\n      if (this.$accordion.classList.contains(ACCORDION.CLASSES.IS_OPEN)) {\n        this._updatePanelHeight();\n      }\n    });\n\n    this._resizeObserver.observe(this.$body);\n  }\n\n  /**\n   * Handle toggle click\n   * @param event - Click event\n   */\n  private _handleToggle(event?: Event): void {\n    event?.preventDefault();\n    const isOpen = this.$accordion.classList.contains(ACCORDION.CLASSES.IS_OPEN);\n    this._setExpandedState(!isOpen);\n  }\n\n  /**\n   * Handle keyboard event\n   * @param event - Keyboard event\n   */\n  private _handleKeydown(event: KeyboardEvent): void {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this._handleToggle(event);\n    }\n  }\n\n  /**\n   * Set expanded state\n   * @param isExpanded - Whether accordion is expanded\n   */\n  private _setExpandedState(isExpanded: boolean): void {\n    this.$toggler?.setAttribute(ACCORDION.ATTRIBUTES.ARIA_EXPANDED, isExpanded.toString());\n    this.$panel?.setAttribute(ACCORDION.ATTRIBUTES.ARIA_HIDDEN, (!isExpanded).toString());\n\n    if (isExpanded) {\n      this.$accordion.classList.add(ACCORDION.CLASSES.IS_OPEN);\n      this._updatePanelHeight();\n    } else {\n      this.$accordion.classList.remove(ACCORDION.CLASSES.IS_OPEN);\n      this.$panel?.style.setProperty(ACCORDION.CSS_VARS.PANEL_HEIGHT, '0px');\n    }\n  }\n\n  /**\n   * Update panel height based on content\n   */\n  private _updatePanelHeight(): void {\n    if (this.$panel && this.$body) {\n      this.$panel.style.setProperty(\n        ACCORDION.CSS_VARS.PANEL_HEIGHT,\n        `${this.$body.clientHeight}px`\n      );\n    }\n  }\n\n  /**\n   * Clean up event listeners and observers\n   */\n  public destroy(): void {\n    this._resizeObserver?.disconnect();\n    this.$toggler?.removeEventListener('click', this._handleToggle);\n    this.$toggler?.removeEventListener('keydown', this._handleKeydown);\n  }\n}\n\n/**\n * Initialize all accordions in the document\n * @returns Array of accordion instances\n */\nexport function initializeAccordions(): AccordionInstance[] {\n  const accordionInstances: AccordionInstance[] = [];\n  const $accordions = document.querySelectorAll<HTMLElement>(ACCORDION.SELECTORS.ACCORDION);\n\n  if (!$accordions.length) return accordionInstances;\n\n  $accordions.forEach(($accordion) => {\n    try {\n      const instance = new Accordion($accordion);\n      accordionInstances.push(instance);\n    } catch (error) {\n      console.error('Error initializing accordion:', error);\n    }\n  });\n\n  return accordionInstances;\n}\n\n// Export constants for backward compatibility\nexport { SELECTORS, CLASSES, ATTRIBUTES, CSS_VARS } from './constants';\n\n// Export component interactions\nexport * from './accordionInteractions';\n\nexport default Accordion; ","// Import component functionality\nimport { initializeButton } from './components/Button/scripts';\nimport { initializeAccordionsWithCustomBehavior } from './components/Accordion/scripts';\n\n/**\n * Initialize all Button components in the document\n */\nfunction initializeButtons(): void {\n  // Select all button elements with the c-btn class\n  const buttons = document.querySelectorAll<HTMLButtonElement>('.c-btn');\n  \n  // Initialize each button with default functionality\n  buttons.forEach(button => {\n    initializeButton(button);\n  });\n}\n\n/**\n * Initialize all Accordion components in the document\n */\nfunction initializeAccordions(): void {\n  // Initialize accordions with custom animations and behavior\n  initializeAccordionsWithCustomBehavior();\n}\n\n/**\n * Initialize all components\n */\nfunction initializeComponents(): void {\n  initializeButtons();\n  initializeAccordions();\n  // Add other component initializations as needed\n}\n\n/**\n * DOM ready function\n * @param callback - Function to call when DOM is ready\n */\nfunction onDomReady(callback: () => void): void {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', callback);\n  } else {\n    callback();\n  }\n}\n\n// Initialize all components when the DOM is ready\nonDomReady(initializeComponents);\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './docs/App';\nimport './styles/index.scss';\n\n// Find the root element\nconst rootElement = document.getElementById('root');\n\nif (rootElement) {\n  const root = createRoot(rootElement);\n  root.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n}\n\n// Also initialize any vanilla JS components\nimport './main.ts'; "],"names":["BUTTON","ACCORDION","SELECTORS","HEADER","PANEL","BODY","CLASSES","IS_OPEN","IS_ANIMATING","IS_DISABLED","ATTRIBUTES","ARIA_EXPANDED","ARIA_CONTROLS","ARIA_HIDDEN","ROLE","CSS_VARS","PANEL_HEIGHT","Accordion","_ref","title","children","_ref$defaultOpen","defaultOpen","_ref$disabled","disabled","_ref$iconPosition","iconPosition","icon","_ref$className","className","_useAccordion","initialProps","defaultProps","_objectSpread","_useState2","_slicedToArray","useState","isOpen","panelHeight","state","setState","panelRef","useRef","contentRef","updatePanelHeight","current","height","concat","clientHeight","style","setProperty","prevState","useEffect","handleResize","window","addEventListener","removeEventListener","toggle","generateClassNames","baseClassName","arguments","length","undefined","openClass","disabledClass","trim","generateHeaderClassNames","iconPositionClass","useAccordion","defaultIcon","_jsx","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","_jsxs","onClick","replace","ref","useButton","variant","size","rounded","generateButtonClass","props","_props$variant","_props$size","_props$disabled","_props$rounded","_props$iconOnly","iconOnly","_props$className","sizeClass","iconOnlyClass","roundedClass","handleClick","handler","Button","label","_ref$variant","_ref$size","_ref$iconOnly","_ref$rounded","_useButton","buttonClass","ComponentShowcase","component","description","renderComponent","Date","getFullYear","hasClass","element","classList","contains","addClass","add","removeClass","remove","initializeButton","button","options","_ref$enableHoverEffec","enableHoverEffect","_ref$enableActiveEffe","enableActiveEffect","hoverClass","applyHoverEffect","activeClass","applyActiveEffect","initializeAccordionsWithCustomBehavior","accordionInstances","$accordions","instances","document","querySelectorAll","forEach","$accordion","instance","push","error","accordion","header","querySelector","setTimeout","applyEnterAnimation","_classCallCheck","_defineProperty","this","_initialize","key","value","_initializeElements","_validateElements","_setupAccessibility","_bindEvents","_initializeState","_observeResizing","$toggler","$panel","$body","tagName","_$toggler$parentNode","$button","createElement","innerHTML","parentNode","replaceChild","_this$$toggler","_this$$toggler2","_this$$panel","_this$$panel2","panelId","Math","random","toString","slice","setAttribute","id","_this$$toggler3","_this$$toggler4","_handleToggle","bind","_handleKeydown","_setExpandedState","_updatePanelHeight","_this","_resizeObserver","ResizeObserver","observe","event","preventDefault","isExpanded","_this$$toggler5","_this$$panel3","_this$$panel4","_this$_resizeObserver","_this$$toggler6","_this$$toggler7","disconnect","callback","readyState","rootElement","getElementById","createRoot","render","React","App"],"sourceRoot":""}