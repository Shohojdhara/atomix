import{j as c}from"./jsx-runtime-BjG_zV1W.js";import{r as m}from"./index-BVDOR7y2.js";const u=m.forwardRef(({children:i,className:o="",justifyContent:a,alignItems:n,noGutters:l,...r},s)=>{const t=["o-grid"];return a&&t.push(`u-justify-content-${a}`),n&&t.push(`u-align-items-${n}`),l&&t.push("o-grid--no-gutters"),o&&t.push(o),c.jsx("div",{ref:s,className:t.join(" "),...r,children:i})});u.displayName="Grid";try{u.displayName="Grid",u.__docgenInfo={description:`Grid component for creating responsive layouts.
Uses the CSS grid system defined in _objects.grid.scss.`,displayName:"Grid",props:{children:{defaultValue:null,description:"The content to be rendered within the grid",name:"children",required:!0,type:{name:"ReactNode"}},className:{defaultValue:{value:""},description:"Additional CSS class names",name:"className",required:!1,type:{name:"string"}},justifyContent:{defaultValue:null,description:"Control the horizontal alignment of items",name:"justifyContent",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"end"'},{value:'"center"'},{value:'"between"'},{value:'"around"'},{value:'"evenly"'}]}},alignItems:{defaultValue:null,description:"Control the vertical alignment of items",name:"alignItems",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"end"'},{value:'"center"'},{value:'"baseline"'},{value:'"stretch"'}]}},noGutters:{defaultValue:null,description:"No gutters between columns",name:"noGutters",required:!1,type:{name:"boolean"}}}}}catch{}const d=m.forwardRef(({children:i,className:o="",xs:a,sm:n,md:l,lg:r,xl:s,xxl:t,offsetXs:p,offsetSm:_,offsetMd:g,offsetLg:h,offsetXl:y,offsetXxl:b,...v},x)=>{const e=!a&&!n&&!l&&!r&&!s&&!t?["o-grid__col","o-grid__col--auto"]:["o-grid__col"];return a&&(a==="auto"?e.push("o-grid__col--auto"):e.push(`o-grid__col--${a}`)),n&&(n==="auto"?e.push("o-grid__col--sm-auto"):e.push(`o-grid__col--sm-${n}`)),l&&(l==="auto"?e.push("o-grid__col--md-auto"):e.push(`o-grid__col--md-${l}`)),r&&(r==="auto"?e.push("o-grid__col--lg-auto"):e.push(`o-grid__col--lg-${r}`)),s&&(s==="auto"?e.push("o-grid__col--xl-auto"):e.push(`o-grid__col--xl-${s}`)),t&&(t==="auto"?e.push("o-grid__col--xxl-auto"):e.push(`o-grid__col--xxl-${t}`)),p&&e.push(`o-grid__offset--${p}`),_&&e.push(`o-grid__offset--sm-${_}`),g&&e.push(`o-grid__offset--md-${g}`),h&&e.push(`o-grid__offset--lg-${h}`),y&&e.push(`o-grid__offset--xl-${y}`),b&&e.push(`o-grid__offset--xxl-${b}`),o&&e.push(o),c.jsx("div",{ref:x,className:e.join(" "),...v,children:i})});d.displayName="GridCol";try{d.displayName="GridCol",d.__docgenInfo={description:`GridCol component for creating columns within a Grid.
Uses the CSS grid column classes defined in _objects.grid.scss.`,displayName:"GridCol",props:{children:{defaultValue:null,description:"The content to be rendered within the column",name:"children",required:!0,type:{name:"ReactNode"}},className:{defaultValue:{value:""},description:"Additional CSS class names",name:"className",required:!1,type:{name:"string"}},xs:{defaultValue:null,description:"Number of columns to span at extra small breakpoint (default)",name:"xs",required:!1,type:{name:'number | "auto"'}},sm:{defaultValue:null,description:"Number of columns to span at small breakpoint",name:"sm",required:!1,type:{name:'number | "auto"'}},md:{defaultValue:null,description:"Number of columns to span at medium breakpoint",name:"md",required:!1,type:{name:'number | "auto"'}},lg:{defaultValue:null,description:"Number of columns to span at large breakpoint",name:"lg",required:!1,type:{name:'number | "auto"'}},xl:{defaultValue:null,description:"Number of columns to span at extra large breakpoint",name:"xl",required:!1,type:{name:'number | "auto"'}},xxl:{defaultValue:null,description:"Number of columns to span at extra extra large breakpoint",name:"xxl",required:!1,type:{name:'number | "auto"'}},offsetXs:{defaultValue:null,description:"Offset at extra small breakpoint",name:"offsetXs",required:!1,type:{name:"number"}},offsetSm:{defaultValue:null,description:"Offset at small breakpoint",name:"offsetSm",required:!1,type:{name:"number"}},offsetMd:{defaultValue:null,description:"Offset at medium breakpoint",name:"offsetMd",required:!1,type:{name:"number"}},offsetLg:{defaultValue:null,description:"Offset at large breakpoint",name:"offsetLg",required:!1,type:{name:"number"}},offsetXl:{defaultValue:null,description:"Offset at extra large breakpoint",name:"offsetXl",required:!1,type:{name:"number"}},offsetXxl:{defaultValue:null,description:"Offset at extra extra large breakpoint",name:"offsetXxl",required:!1,type:{name:"number"}}}}}catch{}const f=m.forwardRef(({children:i,className:o="",type:a,...n},l)=>{let r="o-container";return a&&(r=`o-container-${a}`),c.jsx("div",{ref:l,className:`${r} ${o}`.trim(),...n,children:i})});f.displayName="Container";try{f.displayName="Container",f.__docgenInfo={description:`Container component for creating responsive layouts.
Uses the CSS container classes defined in _objects.container.scss.`,displayName:"Container",props:{children:{defaultValue:null,description:"The content to be rendered within the container",name:"children",required:!0,type:{name:"ReactNode"}},className:{defaultValue:{value:""},description:"Additional CSS class names",name:"className",required:!1,type:{name:"string"}},type:{defaultValue:null,description:`Container type:
- undefined: responsive container with max-width at each breakpoint
- 'fluid': full width container
- 'sm', 'md', 'lg', 'xl', 'xxl': responsive container with max-width at specified breakpoint`,name:"type",required:!1,type:{name:"enum",value:[{value:'"md"'},{value:'"sm"'},{value:'"lg"'},{value:'"xl"'},{value:'"fluid"'},{value:'"xxl"'}]}}}}}catch{}export{f as C,u as G,d as a};
