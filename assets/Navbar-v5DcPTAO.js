import{j as a}from"./jsx-runtime-BjG_zV1W.js";import{r as l}from"./index-BVDOR7y2.js";import{u as k}from"./NavDropdown-9rGURmDU.js";const c=l.forwardRef(({brand:n,children:p,variant:f,position:d="static",containerWidth:v,collapsible:t=!0,expanded:e,onToggle:r,className:m="",disabled:u=!1,backdrop:E=!1,closeOnOutsideClick:O=!0,closeOnEscape:j=!0,ariaLabel:b="Main navigation",id:y},h)=>{const{generateNavbarClass:N,generateContainerStyle:g,generateCollapseClass:_}=k({position:d,collapsible:t,expanded:e,onToggle:r}),[s,o]=l.useState(e||!1),x=l.useRef(null);l.useEffect(()=>{typeof e<"u"&&o(e)},[e]),l.useEffect(()=>{const i=()=>{!(window.innerWidth<768)&&t&&(typeof r=="function"?e&&r(!1):o(!1))};return window.addEventListener("resize",i),()=>{window.removeEventListener("resize",i)}},[t,e,r]);const C=N({position:d,variant:f,collapsible:t,className:m}),q=g(v),w=_(s),V=()=>{if(u)return;const i=!s;typeof r=="function"?r(i):o(i)};return a.jsx("nav",{ref:h,className:C,"aria-label":b,id:y,children:a.jsxs("div",{className:"c-navbar__container",style:q,children:[n&&(typeof n=="string"?a.jsx("a",{href:"/",className:"c-navbar__brand",children:n}):a.jsx("div",{className:"c-navbar__brand",children:n})),t&&a.jsx("button",{className:"c-navbar__toggler",onClick:V,"aria-expanded":s,"aria-label":"Toggle navigation","aria-controls":"navbar-collapse",disabled:u,type:"button",children:a.jsx("span",{className:"c-navbar__toggler-icon"})}),a.jsx("div",{id:"navbar-collapse",className:w,ref:x,children:p})]})})});c.displayName="Navbar";try{c.displayName="Navbar",c.__docgenInfo={description:`Navbar component provides a responsive navigation header with brand, navigation items,
and collapsible mobile menu functionality.`,displayName:"Navbar",props:{brand:{defaultValue:null,description:"Brand/logo component or text",name:"brand",required:!1,type:{name:"ReactNode"}},children:{defaultValue:null,description:"Navbar navigation items",name:"children",required:!1,type:{name:"ReactNode"}},variant:{defaultValue:null,description:"Optional variant/color scheme",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"invert"'},{value:'"brand"'},{value:'"error"'},{value:'"success"'},{value:'"warning"'},{value:'"info"'},{value:'"light"'},{value:'"dark"'}]}},position:{defaultValue:{value:"static"},description:"Navbar position",name:"position",required:!1,type:{name:"enum",value:[{value:'"static"'},{value:'"fixed"'},{value:'"fixed-bottom"'}]}},containerWidth:{defaultValue:null,description:"Container max width (default is from settings)",name:"containerWidth",required:!1,type:{name:"string"}},collapsible:{defaultValue:{value:"true"},description:"Whether to collapse navbar on mobile",name:"collapsible",required:!1,type:{name:"boolean"}},expanded:{defaultValue:null,description:"Whether navbar is expanded (for controlled component)",name:"expanded",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"Callback when expansion state changes",name:"onToggle",required:!1,type:{name:"((expanded: boolean) => void)"}},backdrop:{defaultValue:{value:"false"},description:"Whether to show backdrop when expanded on mobile",name:"backdrop",required:!1,type:{name:"boolean"}},closeOnOutsideClick:{defaultValue:{value:"true"},description:"Whether to close navbar when clicking outside",name:"closeOnOutsideClick",required:!1,type:{name:"boolean"}},closeOnEscape:{defaultValue:{value:"true"},description:"Whether to close navbar on escape key press",name:"closeOnEscape",required:!1,type:{name:"boolean"}},ariaLabel:{defaultValue:{value:"Main navigation"},description:"Custom aria-label for the navigation",name:"ariaLabel",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"ID for the navbar (used for accessibility)",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:{value:""},description:"Additional CSS class names",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Component disabled state",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}try{NavbarProps.displayName="NavbarProps",NavbarProps.__docgenInfo={description:"Navbar component properties",displayName:"NavbarProps",props:{}}}catch{}export{c as N};
