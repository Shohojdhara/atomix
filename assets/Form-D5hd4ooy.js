import{j as y}from"./jsx-runtime-BjG_zV1W.js";import{F as m}from"./components-BrxBU25R.js";function b(o){const t={disabled:!1,...o};return{defaultProps:t,generateFormClass:e=>{const{disabled:a=t.disabled,className:n=""}=e,s=a?m.CLASSES.DISABLED:"";return`${m.CLASSES.BASE} ${s} ${n}`.trim()},handleSubmit:e=>a=>{a.preventDefault(),!t.disabled&&e&&e(a)},handleReset:e=>a=>{!t.disabled&&e&&e(a)}}}const l=({children:o,onSubmit:t,onReset:i,className:d="",disabled:r=!1,id:e,method:a="post",encType:n,noValidate:s=!1,autoComplete:u="on"})=>{const{generateFormClass:p,handleSubmit:c,handleReset:f}=b({disabled:r}),F=p({className:d,disabled:r});return y.jsx("form",{id:e,className:F,onSubmit:c(t),onReset:f(i),method:a,encType:n,noValidate:s,autoComplete:u,children:o})};l.displayName="Form";try{l.displayName="Form",l.__docgenInfo={description:"Form - A component for creating form layouts",displayName:"Form",props:{children:{defaultValue:null,description:"Form content",name:"children",required:!0,type:{name:"ReactNode"}},onSubmit:{defaultValue:null,description:"Form submit handler",name:"onSubmit",required:!1,type:{name:"((event: FormEvent<HTMLFormElement>) => void)"}},onReset:{defaultValue:null,description:"Form reset handler",name:"onReset",required:!1,type:{name:"((event: FormEvent<HTMLFormElement>) => void)"}},id:{defaultValue:null,description:"Form ID",name:"id",required:!1,type:{name:"string"}},method:{defaultValue:{value:"post"},description:"Form method",name:"method",required:!1,type:{name:"enum",value:[{value:'"get"'},{value:'"post"'}]}},encType:{defaultValue:null,description:"Form encoding type",name:"encType",required:!1,type:{name:"string"}},noValidate:{defaultValue:{value:"false"},description:"Whether to disable HTML5 validation",name:"noValidate",required:!1,type:{name:"boolean"}},autoComplete:{defaultValue:{value:"on"},description:"Form autocomplete setting",name:"autoComplete",required:!1,type:{name:"string"}},className:{defaultValue:{value:""},description:"Additional CSS class names",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Component disabled state",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}try{FormProps.displayName="FormProps",FormProps.__docgenInfo={description:"Form component properties",displayName:"FormProps",props:{}}}catch{}export{l as F};
